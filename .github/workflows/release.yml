---
name: Release Charts
on:
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Install yamllint
        run: pip install yamllint

      - name: Lint YAML files
        run: yamllint .

  test-charts:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5.1.1

      - uses: azure/setup-helm@v4

      - name: Get changed files in the charts folder
        id: changed-files-specific
        uses: tj-actions/changed-files@v40
        with:
          files: charts

      - name: Create k8s Kind Cluster
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: helm/kind-action@v1.12.0

      - name: Install kubectl
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: Azure/setup-kubectl@v4

      - name: Run test for any chart concerned by the commit
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          .github/workflows/deploy_modified_charts.sh ${{ steps.changed-files-specific.outputs.all_changed_files }}

  release:
    needs: test-charts
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version: '>=1.17.0'

      - name: Get changed files in the charts folder
        id: changed-files-specific
        uses: tj-actions/changed-files@v46.0.4
        with:
          files: charts/**

      - name: Run update for any chart concerned by the commit
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          echo "---------------------------------------"
          echo "Input: ${{ steps.changed-files-specific.outputs.all_changed_files }}"
          echo "Extract chart names"
          edited_charts_list=()
          for chart in ${{ steps.changed-files-specific.outputs.all_changed_files }}; do
            echo "Processing $chart"
            chart_name=$(echo "$chart" | cut -d"/" -f2 )
            edited_charts_list+=("$chart_name")
          done
          echo "Remove duplicates..."
          chart_list=($(printf "%s\n" "${edited_charts_list[@]}" | sort -u))
          echo "New list: ${chart_list[@]}"
          echo "---------------------------------------"

          for chart in "${chart_list[@]}"; do
            if [[ -d "charts/$chart" ]]; then
              echo "Updating chart version for $chart"
              cd "charts/$chart"
              actual_version=$(git tag --list "$chart*" --sort=-v:refname | head -n 1 | awk -F'-' '{print $NF}')
              if [[ -z "$actual_version" ]]; then
                echo "No version found for $chart, setting to 0.0.0"
                actual_version="0.0.0"
              else
                echo "Current version: $actual_version"
              fi

              chart_version=$(grep '^version:' Chart.yaml | awk '{print $2}')
              if [[ -z "$chart_version" ]]; then
                echo "No version found in Chart.yaml, using $actual_version"
                chart_version="$actual_version"
              fi
              actual_minor=$(echo "$actual_version" | cut -d. -f2)
              chart_minor=$(echo "$chart_version" | cut -d. -f2)
              if [[ "$actual_minor" != "$chart_minor" ]]; then
                echo "INFO: Minor version difference between Chart.yaml ($chart_version) and latest tag ($actual_version)"
                sed -i "s/^version:.*/version: $chart_version.0/" Chart.yaml
              else
                new_version=$(echo "$actual_version" | awk -F. -v OFS=. '{$NF++; print}')
                sed -i "s/^version:.*/version: $new_version/" Chart.yaml
              fi
              cd -
            fi
          done

      - name: Setup Python
        uses: actions/setup-python@v5.1.1

      - name: Helm common repo
        continue-on-error: true
        run: |
          helm repo add common https://rubxkube.github.io/common-charts
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add meilisearch https://meilisearch.github.io/meilisearch-kubernetes

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.7.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          charts_dir: charts

      - name: Modifying the readme on main
        continue-on-error: true
        run: |
          git reset --hard
          git pull
          git checkout main
          cd .github/workflows/
          python -m pip install -r requirements.txt
          python3 get_readme.py
          cd ../..
          git add README.md
          git commit -m ":lock: Auto-Update README with Charts versions"
          git push -f

      - name: Setup Pandoc
        uses: nikeee/setup-pandoc@v1

      - name: Modifying index.html
        continue-on-error: true
        run: |
          index=$(pandoc --from gfm README.md --to html5 --standalone --toc --citeproc --no-highlight)
          git checkout gh-pages
          echo $index > index.html
          git add index.html
          git commit -m "[AUTO] Update index.html of gh-pages"
          git push
