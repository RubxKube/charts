---
define: &containerPort 8989

common:
  name: sonarr

  service:
    type: ClusterIP
    enabled: true
    servicePort: 8989
    containerPort: *containerPort
    extraLabels: {}
    protocol: TCP

  # deployment
  deployment:
    memoryRequest: null
    cpuRequest: null
    memoryLimit: null
    cpuLimit: null
    port: *containerPort
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 25%
        maxSurge: 25%

  # container
  image:
    repositorySettings:
      name: null
      isPrivate: false
      secretName: null
    repository: linuxserver/sonarr
    tag: 4.0.14
    pullPolicy: Always

  # ingress
  ingress:
    enabled: false
    hostName: "sonarr.une-tasse-de.cafe"
    tls:
      enabled: true
      secretName: ""
    # For Ingress CRD
    ingressClassName: ""
    entrypoint: websecure
    certResolver: letsencrypt  # leave empty if you don't use, tls.enabled must be true and secretName must me empty

  # env variables
  variables:
    secret: {}
    nonSecret:
      PUID: 1000
      PGID: 1000
      TZ: Etc/UTC
      AUTO_UPDATE: true

  # startupProbe
  startupProbeEnabled: false
  startupProbe:
    httpGet:
      path: "/"
      port: *containerPort
    periodSeconds: 10
    failureThreshold: 20
    timeoutSeconds: 1

  persistence:
    enabled: true
    volumes:
      - name: "config"
        storageClassName: ""  # leave empty if you want to use default
        size: "2Gi"
        pvcClaim: ""  # Fill only if you want to use existing pvc
        containerMount: "/config/"
      - name: "tv"  # OPTIONAL
        storageClassName: ""
        size: "1Gi"
        pvcClaim: ""
        containerMount: "/tv/"
      - name: "downloads"  # OPTIONAL
        storageClassName: ""
        size: "2Gi"
        pvcClaim: ""
        containerMount: "/downloads/"

  tests:
    classicHttp:  # default helm test method
      enabled: true
    curlHostHeader:  # curl using ingress.hostName as Host in header
      enabled: true
      path: "/"
