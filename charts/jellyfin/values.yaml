---
define: &containerPort 8096

common:
  name: jellyfin

  service:
    type: ClusterIP
    enabled: true
    servicePort: 80
    containerPort: *containerPort
    extraLabels: {}

  # deployment
  deployment:
    memoryRequest: null
    cpuRequest: null
    memoryLimit: null
    cpuLimit: null
    port: *containerPort
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 25%
        maxSurge: 25%

  # container
  image:
    repositorySettings:
      isPrivate: false
      secretName: null
    repository: jellyfin/jellyfin
    tag: "10.10.7"
    pullPolicy: Always

  ingress:
    enabled: false
    hostName: jellyfin.yourdomain.com
    ingressClassName: ""
    extraLabels: {}
    tls:
      enabled: false
      secretName: jellyfin
    annotations:
      {}
      # cert-manager.io/cluster-issuer: cloudflare

  # env variables
  variables:
    secret: {}
    nonSecret:
      USER_UID: "1000"
      USER_GID: "1000"
      TZ: Europe/Paris

  # horizontal autoscaler
  hpa:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    avgCpuUtilization: 50

  # startupProbe
  startupProbeEnabled: true
  startupProbe:
    httpGet:
      path: "/"
      port: *containerPort
    periodSeconds: 10
    failureThreshold: 20
    timeoutSeconds: 1

  # readinessProbe
  readinessProbeEnabled: true
  readinessProbe:
    httpGet:
      path: "/"
      port: *containerPort
    initialDelaySeconds: 30
    periodSeconds: 30
    failureThreshold: 2
    timeoutSeconds: 3

  # livenessProbe
  livenessProbeEnabled: true
  livenessProbe:
    httpGet:
      path: "/"
      port: *containerPort
    initialDelaySeconds: 30
    periodSeconds: 60
    failureThreshold: 1
    timeoutSeconds: 3

  persistence:
    enabled: true
    volumes:
      - name: "data"
        storageClassName: "" # leave empty if you want to use default
        size: "50Gi"
        pvcClaim: "" # Fill only if you want to use existing pvc
        containerMount: "/data/"
      - name: "config"
        storageClassName: ""
        size: "2Gi"
        pvcClaim: ""
        containerMount: "/config/"
      - name: "cache"
        storageClassName: ""
        size: "5Gi"
        pvcClaim: ""
        containerMount: "/cache/"

  tests:
    classicHttp: # default helm test method
      enabled: true
    curlHostHeader: # curl using ingress.hostName as Host in header
      enabled: true
      path: "/"
