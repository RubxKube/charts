{{ if .Values.route.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-route
  {{- if (.Values.route.deployment.annotations) }}
  annotations:
    {{- if .Values.route.deployment.annotations }}
      {{- toYaml .Values.route.deployment.annotations | nindent 4 }}
    {{- end }}
  {{- end }}
  labels:
    app: {{ .Release.Name }}-route
    {{- if .Values.route.deployment.extraLabels }}
      {{- with .Values.route.deployment.extraLabels }}
        {{- toYaml . | nindent 4 }}
      {{- end }}
    {{- end }}
spec:
  replicas: {{ .Values.route.deployment.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-route
      {{- if .Values.route.deployment.extraLabels }}
        {{- with .Values.route.deployment.extraLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
  template:
    metadata:
      annotations:
        {{- toYaml .Values.route.deployment.annotations | nindent 8 }} 
      labels:
        app: {{ .Release.Name }}-route
        {{- if .Values.route.deployment.extraLabels }}
          {{- with .Values.route.deployment.extraLabels }}
            {{- toYaml . | nindent 8 }}
          {{- end }}
        {{- end }}
    spec:
      containers:
      - name: haproxy
        image: {{ .Values.route.image.repository }}:{{ .Values.route.image.tag }}
        ports:
        - containerPort: 80
        volumeMounts:
        - name: haproxy-config
          mountPath: /usr/local/etc/haproxy/haproxy.cfg
          subPath: haproxy.cfg
      volumes:
      - name: haproxy-config
        configMap:
          name: {{ .Release.Name }}-route-config
{{ end }}
